<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- POM file generated with GWT webAppCreator -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.mpi</groupId>
    <artifactId>yams-gwt</artifactId>
    <packaging>war</packaging>
    <version>1.0-testing-SNAPSHOT</version>
    <name>YAMS GWT</name>
    <parent>
        <groupId>nl.mpi</groupId>
        <artifactId>yams-parent</artifactId>
        <version>1.0</version>
    </parent>
    <properties>
        <!-- Convenience property to set the GWT version -->
        <!--<gwtVersion>2.5.1</gwtVersion>-->
        <gwtVersion>2.6.0-rc3</gwtVersion>
        <!-- GWT needs at least java 1.5 -->
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <netbeans.hint.license>gpl20</netbeans.hint.license>
        <plugin.build-date>${maven.build.timestamp}</plugin.build-date>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <classifier>sources</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>plugins-core</artifactId>
            <version>1.3-testing-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>yams-common</artifactId>
            <version>1.0-pretesting-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>de.mpg.mpgaai</groupId>
            <artifactId>mpgaai-shhaa</artifactId>
            <version>1.0.5</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--        <dependency>
            <groupId>com.googlecode.gwtphonegap</groupId>
            <artifactId>gwtphonegap</artifactId>
            <version>2.4.0.0</version>
        </dependency>-->
<!--        <dependency>
                    
            http://stackoverflow.com/questions/10696117/gwt-maven-dependencies
            Use Lib in compile scope and exclude gwt-dev:
            
      <groupId>Lib group</groupId>
      <artifactId>Lib artifact id</artifactId>
      <version>Lib version</version>
      <scope>compile</scope>
      
    </dependency>
        
        <exclusions>
                <exclusion>
                    <artifactId>arbil-help</artifactId>
                    <groupId>nl.mpi</groupId>
                </exclusion>
                                <exclusion>
                    <artifactId>arbil-localisation</artifactId>
                    <groupId>nl.mpi</groupId>
                </exclusion>
            </exclusions>
-->
<!--        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            po internationalisation support
            <groupId>com.googlecode.gettext-commons</groupId>
            <artifactId>gettext-maven-plugin</artifactId>
            <version>1.2.4</version>
        </dependency>-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.7</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>                
                <includes>
                    <include>**/version.properties</include>
                </includes>
            </resource>
        </resources>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

        <plugins>

            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwtVersion}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <goal>i18n</goal>
                            <goal>generateAsync</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see 
                gwt-maven-plugin documentation at codehaus.org -->
                <configuration> 
                    <!--<style>DETAILED</style> this 'style detailed' turns off the javascript obfuscaton -->
                    <runTarget>yams.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <i18nMessagesBundle>nl.mpi.yams.client.Messages</i18nMessagesBundle>
                </configuration>
            </plugin>

            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <showDeprecation>true</showDeprecation>
                    <debug>true</debug>
                </configuration>
            </plugin>
            <plugin>
                <!--                                		 
		    License plugin checks for presence of license header in all source files (with some exceptions, see excludes below).
		    You can use this plugin to actually insert or fix the license headers by running maven with the following goal:

		    mvn license:format

                    For more info, see <http://mathieu.carbou.free.fr/p/maven-license-plugin/>.
                -->
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <version>1.9.0</version> 
                <configuration>
                    <header>${project.basedir}/src/license-header.txt</header>
                    <strictCheck>false</strictCheck>
                    <properties>
                        <year>${plugin.license.copyrightYear}</year>
                        <organization>${project.organization.name}</organization>
                    </properties>
                    <mapping>
                        <svg>XML_STYLE</svg>
                        <imdi>XML_STYLE</imdi>
                        <cmdi>XML_STYLE</cmdi>
                    </mapping>
                    <excludes>
                        <exclude>nbactions.xml</exclude>
                        <exclude>nb-configuration.xml</exclude>
                        <exclude>**/*.txt</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <dependencies>
                    <dependency>
                        <groupId>nl.mpi</groupId>
                        <artifactId>mpi-deploy</artifactId>
                        <version>1.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>
                            <descriptorRefs>
                                <descriptorRef>mpi-deploy</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--              chrome app plugins 
             use the war plugin to stage the crx files 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <executions>
                    <execution>
                        <id>stage-crx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
             the crx is created in maven's package phase 
            <plugin>
                <groupId>com.google.code</groupId>
                <artifactId>crx-maven-plugin</artifactId>
                <version>1.1.0</version>
                <extensions>true</extensions>
                <configuration>
                    <pemKey>mykey.pem</pemKey>
                    <pemCert>mycert.pem</pemCert>
                </configuration>
            </plugin>-->
        </plugins>
    </build>
    <!--    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../common/src/main/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-resource</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>../common/src/main/resources</directory>
                                            <targetPath>resources</targetPath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>-->
</project>
